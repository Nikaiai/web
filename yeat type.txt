7-1

1 SELECT DISTINCT(city) FROM customers
2 SELECT DISTINCT(rating) FROM customers
3 SELECT DISTINCT(comm) FROM salespeople
4 SELECT * FROM salespeople WHERE city='London'
5 SELECT * FROM salespeople WHERE comm>0.12
6 SELECT * FROM customers WHERE city='Rome'
7 SELECT * FROM customers WHERE rating=100 OR rating=300
8 SELECT * FROM orders WHERE amt<1000
9 SELECT * FROM customers WHERE city='Rome' AND rating=200
10 SELECT * FROM customers WHERE city='Berlin' OR rating=300

7-2

1 SELECT * FROM customers WHERE snum in(1001,1002,1007)
2 SELECT * FROM orders WHERE cnum in(2001,2004,2008)
3 SELECT * FROM salespeople WHERE snum BETWEEN 1001 AND 1005
4 SELECT * FROM salespeople WHERE comm BETWEEN 0.10 AND 0.13
5 SELECT * FROM customers WHERE cname BETWEEN 'A' AND 'H'
6 SELECT * FROM customers WHERE city BETWEEN 'A' AND 'M'
7 SELECT * FROM orders WHERE odate BETWEEN '2021-03-10' AND '2021-05-10'
8 SELECT * FROM customers WHERE cname LIKE 'C%'
9 SELECT * FROM customers WHERE cname LIKE 'G%'
10 SELECT * FROM customers WHERE cname LIKE 'G%s'


6

1 ALTER TABLE salespeople rename salespeople1;
2 ALTER TABLE salespeople1 rename column sname to sname1;
  ALTER TABLE salespeople1 rename column city to city1;
3 ALTER TABLE salespeople1 add naprav varchar(15) after sname1;
4 UPDATE salespeople1 SET naprav = 'produkti';
5 UPDATE salespeople1 SET naprav = 'produkti';
6 UPDATE salespeople1 SET naprav = 'produkti';
7 ALTER TABLE orders add oplata varchar(15) after dostavka;
8 ALTER TABLE orders add oplata varchar(15) after dostavka;
9 UPDATE customers set pol = 'm';
10 UPDATE customers set city = 'Paris' WHERE city = 'London';
11 UPDATE salespeople1 SET comm = 0.16 WHERE comm > 0.12;
12 DELETE FROM orders WHERE onum = 3011;


5

2 когда создается таблица при создании столбца указать default = <znachenie>
3 insert into <nazvanie> select * from <nzv_dr_tablitsi> where <nazv_stlobtsa> = <zhachenie>
4 должна быть уже создана через креат табле, стобцы должны совпадать в обеих таблицах
5 ?? чтобы брать значение из др таблиц
6 int varchar float 
7 CREATE database grouber;
  CREATE TABLE salespeople (snum integer(15), city char(15));
  CREATE TABLE customers (cnum integer(15), cname char(15));
  CREATE TABLE orders (amt float(15), sname char(15));
  insert INTO salespeople VALUES (1, 'rnd'), (2, 'berlin');
  insert INTO customers VALUES (1, 'oleg'), (2, 'max');
  insert INTO orders VALUES (100, 'danil'), (240, 'ivan');


12

1 SELECT customers.cname, customers.rating, avg(DISTINCT amt) from orders JOIN customers on customers.cnum = orders.cnum GROUP by orders.cnum;
2 SELECT cname FROM customers WHERE city = 'Rome' AND rating < (SELECT AVG(rating) FROM customers);
3 SELECT comm FROM salespeople WHERE snum IN (SELECT snum from customers WHERE city = 'Paris');
4 SELECT COUNT(onum) FROM orders WHERE amt < (SELECT avg(amt) FROM orders) AND odate = '2021-03-10';
5 SELECT sname FROM salespeople WHERE snum = (SELECT cnum - 1000 FROM customers WHERE city = 'Berlin');
6 SELECT sum(amt) FROM orders GROUP by snum HAVING sum(amt) > (SELECT max(amt) FROM orders);

13

1 SELECT cname, 'bad',rating, city FROM customers WHERE rating < 200 UNION SELECT cname, 'nice',rating, city FROM customers where rating >= 200;
2 SELECT cname, cnum FROM customers where cnum IN (SELECT cnum FROM orders WHERE amt > 0) UNION SELECT sname, snum FROM salespeople WHERE snum in (SELECT snum FROM orders  WHERE amt > 0) order BY cname ASC;
3 SELECT snum FROM salespeople WHERE city = 'San Jose' UNION all SELECT cnum FROM customers WHERE city = 'San Jose' UNION all SELECT onum FROM orders WHERE odate = '2021-04-10';

16

1 SELECT salespeople.sname FROM salespeople JOIN customers on customers.snum = salespeople.snum WHERE customers.city = any(SELECT salespeople.city);
2 SELECT snum, sname FROM salespeople WHERE comm > all (SELECT comm FROM salespeople WHERE city = 'London');
3 SELECT * FROM orders where amt < all(SELECT amt FROM orders WHERE odate = '2021-04-10');
4 SELECT orders.snum FROM orders GROUP by orders.snum HAVING sum(DISTINCT amt) > all (SELECT (sum(DISTINCT amt)-1) FROM orders GROUP by snum);
5 SELECT orders.snum, salespeople.sname FROM orders JOIN salespeople on salespeople.snum = orders.snum GROUP by orders.snum HAVING sum(DISTINCT amt) > all (SELECT (sum(DISTINCT amt)-1) FROM orders GROUP by snum);








